@model IEnumerable<MVCTest.Models.NoteDB>
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Index";
}

<script type="text/javascript">
    function UnLikedClick(id, e) {
        //$.ajax({
        //    url: '/Notes/UnLiked/' + id,
        //    type: 'GET',
        //    success: function (data) {
        //        $('#' + id).html('<p>' + data.Likes + '</p>');
        //        $('#' + id + '-LikeLink').attr("onclick", "LikedClick(" + id + ",this)");
        //        $('#' + id + '-LikeLink').html("点赞");
        //    }
        //});
        $('#' + id).load('/Notes/UnLiked/' + id);
        $('#' + id + '-LikeLink').attr("onclick", "LikedClick(" + id + ",this)");
        $('#' + id + '-LikeLink').html("点赞");
    }

    function LikedClick(id, e) {
        $('#' + id).load('/Notes/Liked/' + id);
        $('#' + id + '-LikeLink').attr("onclick", "UnLikedClick(" + id + ",this)");
        $('#' + id + '-LikeLink').html("取消点赞");
    }
</script>

<h2>朋友圈</h2>

<p>
    @if (Request.IsAuthenticated)
    {
        @Html.ActionLink("发布朋友圈", "Create")
    }
    else
    {
        @Html.ActionLink("发布朋友圈", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })
    }
</p>
<hr style="height:1px;border:none;border-top:1px solid #555555;" />
@{
    IEnumerable<MVCTest.Models.NoteDB> m = Model.OrderByDescending(i => i.Time);
}
@{
    foreach (var item in m)
    {
        <p><b>用户名：@Html.DisplayFor(modelItem => item.Username)</b></p>
        <p>@Html.DisplayFor(modelItem => item.Text)</p>
        if (item.Forward != 0)
        {
            List<MVCTest.Models.NoteDB> ml = m.ToList();
            MVCTest.Models.NoteDB a = ml.Find(x => x.Id == item.Forward);
            <div style="background-color:rgba(100, 100, 100, 0.15);padding:10px 5px;"><b>@a.Username</b>：@a.Text</div>
        }
        <p align="right">@Html.DisplayFor(modelItem => item.Time)</p>
        <div id="@item.Id">@Html.Partial("_LikesPartialView", item)</div>


        <p>
            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |
            @if (Request.IsAuthenticated)
            {
                if (item.Likes.Contains(User.Identity.GetUserName()))
                {
                    <a id="@item.Id-LikeLink" href="javascript:void(0);" onclick="UnLikedClick(@item.Id,this)">取消点赞</a>
                }
                else
                {
                    <a id="@item.Id-LikeLink" href="javascript:void(0);" onclick="LikedClick(@item.Id,this)">点赞</a>
                }
            }
            else
            {
                @Html.ActionLink("点赞", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })
            } |
            @if (Request.IsAuthenticated)
            {
                @Html.ActionLink("转发", "Relay", new { id = item.Id })
            }
            else
            {
                @Html.ActionLink("转发", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })
            }
        </p>
        <hr style="height:1px;border:none;border-top:1px solid #555555;" />
    }
}

